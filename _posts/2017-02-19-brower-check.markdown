---
layout:     post
title:      "사용자 브라우저 탐지"
subtitle:   "Javascript"
date:       2017-02-09 08:00:00
author:     "Juntaek Lee"
header-img: "img/post-bg-06.jpg"
---



# 클라이언트 탐지
---
 현재 인터넷 브라우저에는 크롬, 익스플로, 사파리... 등 여러 브라우저가 존재한다. 각 브라우저마다 제공하는 기능이 다르기 때문에 웹 개발자는 이를 고려하여 개발을 해야한다. 이 부분을 제대로 고려하지 않는다면 크롬에서는 잘 동작하던 기능이 사파리에서는 작동하지 않는 버그와 마주칠 수 있다. 클라이언트 탐지에는 여러가지 방법이 존재한다. 지금부터 그 방법에 대해 알아보도록 하겠다.
 
 
 ### 기능탐지
 ---
 클라이언트 탐지법 중 가장 많이 쓰이는 방법이다. 어떤 브라우저를 사용 중인지는 관심이 없고 어떤 기능이 지원되는지에 주목하는 방법이다. 기능이 지원되는지 확인하기 위해서는 아래와 같은 방법을 사용한다.
 
 ![](http://ljt629.github.io/img/client-1.png)
 (이미지 출처 : http://sonim1.tistory.com/146)
 
 IE 5 이전 버전에서는 document.getElementById()가 지원되지 않기 때문에 document.all로 구현하였다. 이렇게 기능별로 지원이 되는지 확인하는 것을 기능탐지라고 한다. 기능 탐지 방법을 사용할 때는 일반적인 방법을 제일 먼저 테스트하는 것이 좋다. (일반적인 해결책을 먼저 테스트하면 테스트할 조건 수가 줄어들어 코드 실행이 능률적임) 위의 예제와 같이 document.getElementById()를 document.all보다 먼저 테스트 해야하는 이유이다.
 
 위의 예제는 기능이 존재하는지만 테스트하였다. 기능 탐지는 기능이 존재하는지만이 아니라 그 기능이 정확히 동작하는지 확인한다면 더욱 효율적이다. 이를 위해 웹개발자들 사이에서 많이 사용되는 기능탐지 코드는 아래와 같다. 하지만 이 역시도 미래에 제대로 작동하리라는 보장을 할 수 없다. 따라서 웹개발자는 항상 최신 웹 기술에 민간하여야한다.
 
![](http://ljt629.github.io/img/client-2.png)
 (이미지 출처 : http://sonim1.tistory.com/146)
 
 
 ### 퀵스 탐지
---
기능 탐지가 지원하는 기능을 찾는 것이었다면 퀵스 탐지는 동작하지 않는 것을 찾아내는 기법이다. 쉽게 말하면 브라우저의 특정 버전이 가지고 있는 버그를 발견하여 이를 이용하여 브라우저의 버전을 탐색하는 방법이다.
 
### 브라우저 탐지
브라우저 탐지는 사용자가 HTTP 요청을 보낼때 헤더에 포함된 에이전트 문자열을 통해 어떤 브라우저에서 실행 중인지 확인하는 방법이다. 단순하게 생각했을 때 기능탐지, 퀵스탐지보다 브라우저 탐지가 명확하고 간편할 거 같다. 하지만 브라우저 탐지는 기능탐지, 퀵스탐지로 해결되지 않을 때에만 사용하는 최후의 보루라고 한다. 왜 그런걸까?
 
초기 브라우저의 에이전트 문자열은 상당히 단순했다고 한다. 하지만 세월이 흘러 운영체제의 다양화 등의 문제로 문자열 형식이 매우 길고 복잡해졌다고 한다. 심지어 자주 바뀌기까지 하니 브라우저 탐지 방법으로 사용자가 어떤 브라우저를 사용한다고 판단하기가 힘들다. 
 
브라우저 탐지는 단순히 크롬인가 사파리인가를 구분하는 것에서 끝나지 않는다.  아래와 같은 정보들은 브라우저 탐지의 구분자들로 사용될 수 있다.
**(1) 렌더링엔진**
ie, gecko, webkit, khtml, opera
**(2) 브라우저**
ie, firefox, safari, konq, opera, chrome
**(3) 플랫폼**
win, mac, x11, iphone, ipod, ipad, ios, android, nokiaN, winMobile, wii, ps
**(4) 윈도우 운영체제 버전 탐지**
2000, XP, Vista, 7, NT...등
**(5) 모바일 운영체제 버전 탐지**
iOS 버전판단, 안드로이드 버전 판단
 
위에서 이야기했지만 브라우저 탐지는 최후의 보루이다. 아래와 같은 상황일 때만 사용하도록 하는게 좋겠다.
**(1) 기능탐지, 퀵스탐지로 탐지할 수 없을 때**
예를 들어, 일부 브라우저는 기능의 일부만 구현했을 수 있다. 이럴 때는 해당 기능의 함수가 존재하는지만으로는 정확한 탐지가 불가능하다.
**(2) 같은 브라우저의 기능이 플랫폼별로 다를 때**
어떤 플랫폼에서 동작하는지 파악해야한다.
**(3) 통계를 목적으로 할 때**
사용자가 어떤 브라우저를 사용하는지 통계로 사용할 경우에 쓴다.
 
 
 
 ###참조
---

서적 : 프론트엔드 개발자를 위한 자바스크립트 프로그래밍

블로그 : http://sonim1.tistory.com/146